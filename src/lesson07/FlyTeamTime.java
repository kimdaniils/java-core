package lesson07;
import java.io.*;
import java.util.*;
import java.time.*; // –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º

public class FlyTeamTime {

    // =================== –ö–õ–ê–°–° –ú–ï–°–¢–ê ===================
    static class Seat implements Serializable {
        int number;
        String seatClass;
        String status;           // "—Å–≤–æ–±–æ–¥–µ–Ω", "–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω", "–æ–ø–ª–∞—á–µ–Ω"
        String passengerName;
        LocalDateTime bookingTime; // –≤—Ä–µ–º—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

        Seat(int number, String seatClass) {
            this.number = number;
            this.seatClass = seatClass;
            this.status = "—Å–≤–æ–±–æ–¥–µ–Ω";
            this.passengerName = "";
            this.bookingTime = null;
        }

        void book(String name) {
            status = "–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω";
            passengerName = name;
            bookingTime = LocalDateTime.now();
        }

        void pay() {
            if (status.equals("–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω")) {
                status = "–æ–ø–ª–∞—á–µ–Ω";
                System.out.println("–ë—Ä–æ–Ω—å —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω–∞!");
            } else {
                System.out.println("–ù–µ–ª—å–∑—è –æ–ø–ª–∞—Ç–∏—Ç—å ‚Äî –º–µ—Å—Ç–æ –Ω–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ.");
            }
        }

        void cancel() {
            status = "—Å–≤–æ–±–æ–¥–µ–Ω";
            passengerName = "";
            bookingTime = null;
        }

        boolean isExpired() {
            if (status.equals("–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω") && bookingTime != null) {
                Duration diff = Duration.between(bookingTime, LocalDateTime.now());
                return diff.toMinutes() > 24;
            }
            return false;
        }

        public String toString() {
            String info = "–ú–µ—Å—Ç–æ " + number + " [" + seatClass + "] - " + status.toUpperCase();
            if (!passengerName.isEmpty()) info += " (" + passengerName + ")";
            if (bookingTime != null) info += " | –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ: " + bookingTime.toString();
            return info;
        }
    }

    // =================== –ö–õ–ê–°–° –°–ê–ú–û–õ–Å–¢–ê ===================
    static class Airplane implements Serializable {
        ArrayList<Seat> seats = new ArrayList<>();
        LocalDate flightDate; // –¥–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞

        Airplane(LocalDate flightDate) {
            this.flightDate = flightDate;
            for (int i = 1; i <= 10; i++)
                seats.add(new Seat(i, "–ë–∏–∑–Ω–µ—Å"));
            for (int i = 11; i <= 20; i++)
                seats.add(new Seat(i, "–≠–∫–æ–Ω–æ–º"));
        }

        Seat findSeat(int number) {
            for (Seat s : seats)
                if (s.number == number)
                    return s;
            return null;
        }

        void showAll() {
            System.out.println("\n--- –°–ø–∏—Å–æ–∫ –º–µ—Å—Ç –Ω–∞ —Ä–µ–π—Å " + flightDate + " ---");
            for (Seat s : seats)
                System.out.println(s);
        }

        void showVisual() {
            System.out.println("\n–ë–∏–∑–Ω–µ—Å-–∫–ª–∞—Å—Å:");
            printRange(1, 10);
            System.out.println("–≠–∫–æ–Ω–æ–º-–∫–ª–∞—Å—Å:");
            printRange(11, 20);
        }

        void printRange(int start, int end) {
            for (int i = start; i <= end; i++) {
                Seat s = findSeat(i);
                if (s.isExpired()) s.cancel(); // üïí –∞–≤—Ç–æ-—Å–±—Ä–æ—Å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –±—Ä–æ–Ω–∏
                System.out.print(s.status.equals("—Å–≤–æ–±–æ–¥–µ–Ω") ? "[O]" :
                    s.status.equals("–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω") ? "[B]" : "[P]");
                if (i % 5 == 0) System.out.println();
            }
        }
    }

    // =================== –ö–õ–ê–°–° –°–ò–°–¢–ï–ú–´ –ë–†–û–ù–ò–†–û–í–ê–ù–ò–Ø ===================
    static class BookingSystem {
        Airplane airplane;
        String fileName = "seats.dat";

        BookingSystem() {
            airplane = load();
            if (airplane == null) {
                Scanner sc = new Scanner(System.in);
                System.out.print("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤—ã–ª–µ—Ç–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î): ");
                String input = sc.nextLine();
                LocalDate date = LocalDate.parse(input);
                airplane = new Airplane(date);
            }
        }

        void showSeats() {
            airplane.showAll();
            airplane.showVisual();
            save();
        }

        void bookSeat(int number, String name) {
            Seat seat = airplane.findSeat(number);
            if (seat == null) {
                System.out.println("–¢–∞–∫–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–µ—Ç.");
                return;
            }
            if (!seat.status.equals("—Å–≤–æ–±–æ–¥–µ–Ω")) {
                System.out.println("–ú–µ—Å—Ç–æ —É–∂–µ –∑–∞–Ω—è—Ç–æ –∏–ª–∏ –æ–ø–ª–∞—á–µ–Ω–æ.");
                return;
            }
            seat.book(name);
            save();
            System.out.println("–ú–µ—Å—Ç–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ –∏–º—è " + name);
        }

        void payForSeat(int number) {
            Seat seat = airplane.findSeat(number);
            if (seat == null) {
                System.out.println("–¢–∞–∫–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–µ—Ç.");
                return;
            }
            seat.pay();
            save();
        }

        void cancelBooking(int number) {
            Seat seat = airplane.findSeat(number);
            if (seat == null) {
                System.out.println("–¢–∞–∫–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–µ—Ç.");
                return;
            }
            if (seat.status.equals("—Å–≤–æ–±–æ–¥–µ–Ω")) {
                System.out.println("–ú–µ—Å—Ç–æ –∏ —Ç–∞–∫ —Å–≤–æ–±–æ–¥–Ω–æ.");
                return;
            }
            seat.cancel();
            save();
            System.out.println("–ë—Ä–æ–Ω—å —Å–Ω—è—Ç–∞.");
        }

        void showInfo(int number) {
            Seat seat = airplane.findSeat(number);
            if (seat == null)
                System.out.println("–¢–∞–∫–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–µ—Ç.");
            else
                System.out.println(seat);
        }

        void save() {
            try {
                ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(fileName));
                out.writeObject(airplane);
                out.close();
            } catch (Exception e) {
                System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.");
            }
        }

        Airplane load() {
            try {
                ObjectInputStream in = new ObjectInputStream(new FileInputStream(fileName));
                Airplane a = (Airplane) in.readObject();
                in.close();
                return a;
            } catch (Exception e) {
                return null;
            }
        }
    }

    // =================== MAIN ===================
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        BookingSystem system = new BookingSystem();

        while (true) {
            System.out.println("\n===== –ú–ï–ù–Æ =====");
            System.out.println("1. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –º–µ—Å—Ç–∞");
            System.out.println("2. –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ");
            System.out.println("3. –û–ø–ª–∞—Ç–∏—Ç—å –±—Ä–æ–Ω—å");
            System.out.println("4. –°–Ω—è—Ç—å –±—Ä–æ–Ω—å");
            System.out.println("5. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–µ");
            System.out.println("0. –í—ã—Ö–æ–¥");
            System.out.print("–í–∞—à –≤—ã–±–æ—Ä: ");

            int choice;
            try {
                choice = Integer.parseInt(sc.nextLine());
            } catch (Exception e) {
                System.out.println("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!");
                continue;
            }

            if (choice == 1) {
                system.showSeats();
            } else if (choice == 2) {
                System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –º–µ—Å—Ç–∞ (1‚Äì20): ");
                int num = sc.nextInt();
                sc.nextLine();
                System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–∞—Å—Å–∞–∂–∏—Ä–∞: ");
                String name = sc.nextLine();
                system.bookSeat(num, name);
            } else if (choice == 3) {
                System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –º–µ—Å—Ç–∞: ");
                int num = sc.nextInt();
                sc.nextLine();
                system.payForSeat(num);
            } else if (choice == 4) {
                System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –º–µ—Å—Ç–∞: ");
                int num = sc.nextInt();
                sc.nextLine();
                system.cancelBooking(num);
            } else if (choice == 5) {
                System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –º–µ—Å—Ç–∞: ");
                int num = sc.nextInt();
                sc.nextLine();
                system.showInfo(num);
            } else if (choice == 0) {
                System.out.println("–í—ã—Ö–æ–¥. –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.");
                break;
            } else {
                System.out.println("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.");
            }
        }
    }
}
